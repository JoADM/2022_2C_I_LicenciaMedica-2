// <auto-generated />
using System;
using LicenciaMedica.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LicenciaMedica.Migrations
{
    [DbContext(typeof(LicenciaMedicaContext))]
    partial class LicenciaMedicaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            //Campos a completar en la tabla

            modelBuilder.Entity("_2022_2C_I_LicenciaMedica.Models.Licencia", b =>
                {
                    b.Property<int>("LicenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LicenciaId"), 1L, 1);

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinSolicitada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicioSolicitada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int");

                    b.HasKey("LicenciaId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("MedicoId");

                    b.ToTable("Licencias");
                });

            modelBuilder.Entity("_2022_2C_I_LicenciaMedica.Models.Prestadora", b =>
                {
                    b.Property<int>("PrestadoraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrestadoraId"), 1L, 1);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailContacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TelefonoContactoID")
                        .HasColumnType("int");

                    b.HasKey("PrestadoraId");

                    b.HasIndex("TelefonoContactoID");

                    b.ToTable("Prestadoras");
                });

            modelBuilder.Entity("_2022_2C_I_LicenciaMedica.Models.Telefono", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("TipoDeTelefono")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("num")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Telefonos");
                });

            modelBuilder.Entity("_2022_2C_I_LicenciaMedica.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FechaAlta")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("_2022_2C_I_LicenciaMedica.Models.Empleado", b =>
                {
                    b.HasBaseType("_2022_2C_I_LicenciaMedica.Models.Usuario");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmpleadoActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("EmpleadoRRHH")
                        .HasColumnType("bit");

                    b.Property<string>("Legajo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObraSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Empleado");
                });

            modelBuilder.Entity("_2022_2C_I_LicenciaMedica.Models.Medico", b =>
                {
                    b.HasBaseType("_2022_2C_I_LicenciaMedica.Models.Usuario");

                    b.Property<string>("Matricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrestadoraId")
                        .HasColumnType("int");

                    b.HasIndex("PrestadoraId");

                    b.HasDiscriminator().HasValue("Medico");
                });

            modelBuilder.Entity("_2022_2C_I_LicenciaMedica.Models.Licencia", b =>
                {
                    b.HasOne("_2022_2C_I_LicenciaMedica.Models.Empleado", "Empleado")
                        .WithMany("Licencias")
                        .HasForeignKey("EmpleadoId");

                    b.HasOne("_2022_2C_I_LicenciaMedica.Models.Medico", "Medico")
                        .WithMany("Licencias")
                        .HasForeignKey("MedicoId");

                    b.Navigation("Empleado");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("_2022_2C_I_LicenciaMedica.Models.Prestadora", b =>
                {
                    b.HasOne("_2022_2C_I_LicenciaMedica.Models.Telefono", "TelefonoContacto")
                        .WithMany()
                        .HasForeignKey("TelefonoContactoID");

                    b.Navigation("TelefonoContacto");
                });

            modelBuilder.Entity("_2022_2C_I_LicenciaMedica.Models.Telefono", b =>
                {
                    b.HasOne("_2022_2C_I_LicenciaMedica.Models.Usuario", null)
                        .WithMany("Telefonos")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("_2022_2C_I_LicenciaMedica.Models.Medico", b =>
                {
                    b.HasOne("_2022_2C_I_LicenciaMedica.Models.Prestadora", "Prestadora")
                        .WithMany()
                        .HasForeignKey("PrestadoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prestadora");
                });

            modelBuilder.Entity("_2022_2C_I_LicenciaMedica.Models.Usuario", b =>
                {
                    b.Navigation("Telefonos");
                });

            modelBuilder.Entity("_2022_2C_I_LicenciaMedica.Models.Empleado", b =>
                {
                    b.Navigation("Licencias");
                });

            modelBuilder.Entity("_2022_2C_I_LicenciaMedica.Models.Medico", b =>
                {
                    b.Navigation("Licencias");
                });
#pragma warning restore 612, 618
        }
    }
}
